---

- name: "(00) Check that we are on a RedHat family node ({{ansible_os_family}})"
  fail: msg="This role requires a (RedHat) family node. But it is ({{ansible_os_family}})."
  when: ansible_os_family != "RedHat"

- name: (00) Check the major version is v7.x.x'
  fail: msg="This role requires a RedHat family node with version v7.x.x, But it is ({{ansible_distribution_major_version}})."
  when: " {{ ansible_distribution_major_version | version_compare('7', 'ne') }} "



### todo: check that dns resolving is all right.
### jboss fuse is very depended on that
#- name: (00) DNS Check that hostname resolves to ip

#- debug:
#    msg: " default ip is ({{ansible_default_ipv4.address}}) and hostname is ({{ansible_hostname}})"


- name: (00) Fail for missing "download_dir"
  fail: msg="This role requires 'download_dir' to be set and non empty. Please refer to the README."
  when: download_dir is not defined or download_dir == ''

- name: "(00) Create the download_dir if it does not exist ({{ download_dir }})"
  file:
    path: "{{ download_dir }}"
    state: directory
    mode: 0755

- name: (00) Install Java and basic RPM dependencies
  become: true
  yum: name={{ item }} state=present
  with_items:
   - unzip
   - zip
   - "{{ java_pkg_name }}"
   - rsync
   # for netstat
   - net-tools
   # for pstree
   - psmisc
   # for vimdiff
   - vim
   - telnet
   - lsof
   - screen
   # for memstat.sh
   - bc


# Set in the DEV environment during the first setup
- name: (00) Copy .bashrc
  template:
    src: .bashrc.j2
    dest: "{{ ansible_env.HOME}}/.bashrc"
  register: bashrc_uploaded

# Set in the DEV environment during the first setup
- name: "(00) Set server timezone to ({{ timezone }})"
  become: true
  when: bashrc_uploaded.changed == True and ( env is not defined or env != 'docker' )
  command: "timedatectl set-timezone {{ timezone }}"

# Set in the DEV environment during the first setup
- name: "(00) Set server Locale to ({{ locale }})"
  become: true
  when: bashrc_uploaded.changed == True and ( env is not defined or env != 'docker' )
  command: "localectl set-locale LANG={{ locale }}"

- name: (00) Set default clock to UTC
  become: true
  when: bashrc_uploaded.changed == True and ( env is not defined or env != 'docker' )
  command: "timedatectl set-local-rtc 0"

- name: (00) force clock (chrony) to current timepoint
  become: true
  when: bashrc_uploaded.changed == True and ( env is not defined or env != 'docker' )
  command: "chronyc -a makestep"

- name: (00) create root bin directory
  become: true
  file:
    path: /root/bin
    state: directory
    mode: 0700

- name: (00) copy memstat.sh to /root/bin
  become: true
  copy:
    src: memstat.sh
    dest: /root/bin/memstat.sh
    owner: root
    group: root
    mode: 0700

- name: (00) copy hostname_resolve_check.sh to /root/bin
  become: true
  copy:
    src: hostname_resolve_check.sh
    dest: /root/bin/hostname_resolve_check.sh
    owner: root
    group: root
    mode: 0700

- name: (00) Check if hostname is resolvable
  become: true
  shell: "/root/bin/hostname_resolve_check.sh"
  register: hostname_check

#- debug:
#    var: hostname_check

- name: (00) Check if host name
  fail: msg="For this role we need a resolvable hostname"
  when: hostname_check.rc != 0

### Reminder to myself
# "ansible_distribution": "CentOS",
# "ansible_distribution_major_version": "7",
# "ansible_distribution_release": "Core",
# "ansible_distribution_version": "7.2.1511",
# "ansible_os_family": "RedHat",

